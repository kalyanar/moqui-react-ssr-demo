<?xml version="1.0" encoding="UTF-8"?>
<screen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/xml-screen-2.0.xsd" require-authentication="false" track-artifact-hit="false"
        default-menu-include="false" standalone="true">
    <actions>
        <script><![CDATA[
        import com.moqui.ssr.React

        def reactAppCache = ec.cache.getCache('react.ssr.apps.ReactSSRDemo')

        ec.context.put('jsBrowserFileMap', reactAppCache.get('jsBrowserFileMap'))
        ec.context.put('cssFileMap', reactAppCache.get('cssFileMap'))

        ec.logger.info("============ ec.web.request.getCookies() ============\n${ec.web.request.getHeader("Cookie")}")
        System.out.println(ec.web.request.getCookies())

        React react = ec.getTool("ReactSSR", React.class, "ReactSSRDemo")

        try {
            Map<String, Object> renderResult = react.render(ec.web.request);

            ec.context.put("content", renderResult.get("html"));
            ec.logger.info("${renderResult.get("state")}")

            ec.context.put("storeState", new groovy.json.JsonBuilder(renderResult.get("state")).toString());
        } catch (org.moqui.context.AuthenticationRequiredException e) {
            ec.logger.error(ec.web.getRequestUrl())
            ((org.moqui.impl.context.WebFacadeImpl) ec.web).saveScreenLastInfo("/apps/react-ssr-demo/apollo-demo/one", null)
            sri.sendRedirectAndStopRender('/Login')
        }
        ]]></script>
    </actions>
    <widgets>
        <render-mode>
            <text type="html" template="true" location="component://moqui-react-ssr-demo/screen/ReactSSRRoot/includes/index.html.ftl"/>
        </render-mode>
    </widgets>
</screen>
