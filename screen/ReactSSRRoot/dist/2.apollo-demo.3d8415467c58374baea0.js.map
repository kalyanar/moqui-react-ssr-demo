{"version":3,"sources":["webpack:///./src/routes/ApolloDemo/containers/ApolloDemoContainer.js"],"names":["ApolloDemo","props","mantle","routes","pattern","map","route","i","propTypes","loading","bool","array","string","object","demoQuery","ApolloDemoWithData","ownProps","data"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;AACA;;;;AACA;;;;IAEMA,U;;;;;;;;;;6BACM;AAAA,mBAC4B,KAAKC,KADjC;AAAA,UACAC,MADA,UACAA,MADA;AAAA,UACQC,MADR,UACQA,MADR;AAAA,UACgBC,OADhB,UACgBA,OADhB;;AAER,aACE;AAAA;AAAA;AACE;AAAA;AAAA;AAAO,mCAAeF,MAAf;AAAP,SADF;AAEE;AAAA;AAAA;AACGC,iBAAOE,GAAP,CAAW,UAACC,KAAD,EAAQC,CAAR;AAAA,mBACV,iGAAiB,KAAKA,CAAtB,IAA6BD,KAA7B,IAAoC,eAAeF,OAAnD,IADU;AAAA,WAAX;AADH;AAFF,OADF;AAUD;;;;;AAGHJ,WAAWQ,SAAX,GAAuB;AACrBC,WAAS,iBAAUC,IADE;AAErBP,UAAQ,iBAAUQ,KAFG;AAGrBP,WAAS,iBAAUQ,MAHE;AAIrBV,UAAQ,iBAAUW;AAJG,CAAvB;;AAOA,IAAMC,sDAAN;;AAkBA,IAAMC,qBAAqB,0BAAQD,SAAR,EAAmB;AAC5Cb,SAAO,qBAA6C;AAAA,QAA1Ce,QAA0C,QAA1CA,QAA0C;AAAA,yBAAhCC,IAAgC;AAAA,QAAxBR,OAAwB,aAAxBA,OAAwB;AAAA,QAAfP,MAAe,aAAfA,MAAe;;AAClD,WAAO;AACLO,sBADK;AAELP;AAFK,KAAP;AAID;AAN2C,CAAnB,EAOxBF,UAPwB,CAA3B;;kBASee,kB","file":"2.apollo-demo.3d8415467c58374baea0.js","sourcesContent":["import React, { Component, PropTypes } from 'react'\nimport { graphql } from 'react-apollo'\nimport gql from 'graphql-tag'\nimport { MatchWithRoutes } from 'lib/react-router-addons-routes'\n\nclass ApolloDemo extends Component {\n  render () {\n    const { mantle, routes, pattern } = this.props\n    return (\n      <div>\n        <span>{JSON.stringify(mantle)}</span>\n        <div>\n          {routes.map((route, i) => (\n            <MatchWithRoutes key={i} {...route} parentPattern={pattern} />\n          ))}\n        </div>\n      </div>\n    )\n  }\n}\n\nApolloDemo.propTypes = {\n  loading: PropTypes.bool,\n  routes: PropTypes.array,\n  pattern: PropTypes.string,\n  mantle: PropTypes.object\n}\n\nconst demoQuery = gql`\nquery {\n  mantle {\n    parties (pagination: { pageSize: 2 }) {\n      edges {\n        node {\n          partyId\n          partyTypeEnumId\n        }\n      }\n      pageInfo {\n        totalCount\n      }\n    }\n  }\n}\n`\n\nconst ApolloDemoWithData = graphql(demoQuery, {\n  props: ({ ownProps, data: { loading, mantle } }) => {\n    return {\n      loading,\n      mantle\n    }\n  }\n})(ApolloDemo)\n\nexport default ApolloDemoWithData\n\n\n\n// WEBPACK FOOTER //\n// ./src/routes/ApolloDemo/containers/ApolloDemoContainer.js"],"sourceRoot":""}